import {  action,  configure,  makeAutoObservable,  makeObservable,  observable,  runInAction,} from 'mobx'import { auth } from './auth'interface Idea {  auth: string  ideaname: string  short_desc: string  tags: string[]}configure({ enforceActions: 'observed' })export class Ideas {  @observable ideas = new Array<Idea>(0)  @observable auto = false  @action update() {    auth.send      .get('/idea/listall')      .then((res) => {        runInAction(() => {          this.ideas = res.data.list        })      })      .catch(() => console.log('update error'))  }  constructor() {    makeAutoObservable(this, {}, { autoBind: true })  }}export const ideas = new Ideas()